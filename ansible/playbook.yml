---
- name: Prepare DIY voice assistant
  hosts: assistants
  become: true
  vars:
    target_user: pi
  pre_tasks:
    - name: Load firewall configuration
      include_vars: ufw_configuration.yml
    - name: Install core packages
      apt:
        name:
          - git
          - htop
          - vim
          - libffi-dev
          - libssl-dev
          - dnsutils
    - name: Avoid kernel upgrades (needed for voicecard driver)
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      with_items:
        - raspberrypi-kernel
        - raspberrypi-kernel-headers



  post_tasks:
    - name: Set swappiness
      sysctl:
        name: vm.swappiness
        value: '0'
        sysctl_file: /etc/sysctl.d/99-local.conf
        reload: true
    - name: Clone seeed-voicecard driver
      git:
        repo: https://github.com/respeaker/seeed-voicecard.git
        dest: "/home/{{ target_user }}/seeed-voicecard"
        update: false
      become: false
    - name: Fix Python SSL modules
      block:
        - name: Remove broken Python module
          pip:
            name: backports.ssl_match_hostname
            state: absent
        - name: Install working Python module
          apt:
            name:
              - python-backports.ssl-match-hostname
      when: ansible_distribution == "Debian"
    - name: Install required PIP modules
      pip:
        name:
          - docker
          - pixel_ring
          - gpiozero
    - name: Install docker.io
      apt:
        name:
          - docker.io
          - docker-compose
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_version == "20.04"
    - name: Download Docker images
      docker_image:
        name: "{{ item }}"
        source: pull
      with_items:
        - stdevel/radio_api:latest
        - rhasspy/rhasspy:latest
        - nodered/node-red
    - name: Create Docker networks
      docker_network:
        name: "{{ item }}"
      with_items:
        - radio_api_default
        - rhasspy_default
        - nodered_default
    - name: Create configuration directories
      file:
        path: "{{ item }}"
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0750'
        state: directory
      with_items:
        - radio_api
        - rhasspy
        - node-red
    - name: Stage container configuration files
      copy:
        src: "templates/{{ item }}-docker-compose.yml"
        dest: "/home/{{ target_user }}/{{ item }}/docker-compose.yml"
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: '0644'
      loop:
        - radio_api
        - rhasspy
        - node-red


  roles:
    - role: nickjj.docker
      docker__apt_repository: "deb [arch=armhf] https://download.docker.com/linux/debian buster stable"
      when: ansible_distribution == "Debian"
    - role: weareinteractive.ufw
      ufw_reset: true
